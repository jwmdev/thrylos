syntax = "proto3";

package thrylos;

option go_package = "github.com/thrylos-labs/thrylos";

message Transaction {
  string id = 1; // Removed json_name, as it's redundant in proto3 when matching the field name exactly.
  int64 timestamp = 2;
  repeated UTXO inputs = 3;
  repeated UTXO outputs = 4;
  bytes encrypted_inputs = 5;
  bytes encrypted_outputs = 6;
  bytes signature = 7; // Use bytes for binary data.
  repeated string previous_tx_ids = 8; // Consider if large, split loading.
  bytes encrypted_aes_key = 9; // Keep as bytes, ensure encryption keys are not logged or misused.
  string sender = 10;
}

// UTXO message optimized for size and clarity.
message UTXO {
  string transaction_id = 1;
  int32 index = 2; // int32 is generally enough for indexing.
  string owner_address = 3;
  int64 amount = 4; // Consider if int64 is necessary vs. int32 depending on the range of values.
}

service BlockchainService {
  rpc SubmitTransaction(TransactionRequest) returns (TransactionResponse);
  rpc GetBlock(GetBlockRequest) returns (BlockResponse);
  rpc GetTransaction(GetTransactionRequest) returns (TransactionResponse);
  rpc GetLastBlock(EmptyRequest) returns (BlockResponse);
  rpc GetBalance(GetBalanceRequest) returns (BalanceResponse);
  rpc GetStats(GetStatsRequest) returns (StatsResponse);
  rpc GetPendingTransactions(GetPendingTransactionsRequest) returns (PendingTransactionsResponse);
}

message TransactionRequest {
  Transaction transaction = 1; // Embedding the Transaction message
}

message TransactionResponse {
  string status = 1;
}

message GetBlockRequest {
  int32 id = 1;
}

message BlockResponse {
  bytes blockData = 1; // Correct type for binary data
  int32 blockIndex = 2;
}

message GetTransactionRequest {
  string id = 1;
}

message BalanceResponse {
  double balance = 1;
}

message GetBalanceRequest {
  string address = 1; // The blockchain address for which the balance is requested
}

message GetStatsRequest {}

message StatsResponse {
  string stats = 1;
}

message GetPendingTransactionsRequest {}

message PendingTransactionsResponse {
  string transactions = 1;
}

message Input {
  string previousTx = 1;
  int32 index = 2;
  string signature = 3;
  string ownerAddress = 4;
}

message Output {
  double amount = 1;
  string address = 2;
}

message EmptyRequest {}

// to generate the file again run:
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative transactions.proto
