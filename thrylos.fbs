namespace thrylos;

table UTXO {
    transaction_id:string;
    index:int;
    owner_address:string;
    amount:int64;
}

table Block {
    index:int;
    transactions:[Transaction];
    hash:[ubyte]; // Assuming hash is stored as a byte array
    validator:string;
    timestamp:int64;
}

table Transaction {
    id:string;
    timestamp:int64;
    inputs:[UTXO];
    outputs:[UTXO];
    encrypted_inputs:[ubyte];
    encrypted_outputs:[ubyte];
    signature:[ubyte];
    previous_tx_ids:[string];
    encrypted_aes_key:[ubyte];
    sender:string;
}

table TransactionRequest {
    transaction:Transaction;
}

table TransactionResponse {
    status:string;
}

table GetBlockRequest {
    id:int;
}

table BlockResponse {
    block_data:[ubyte];
    block_index:int;
}

table GetTransactionRequest {
    id:string;
}

table BalanceResponse {
    balance:float64;
}

table GetBalanceRequest {
    address:string;
}

table GetStatsRequest {}

table StatsResponse {
    stats:string;
}

table GetPendingTransactionsRequest {}

table PendingTransactionsResponse {
    transactions:string;
}

table EmptyRequest {}

rpc_service BlockchainService {
    SubmitTransaction(TransactionRequest):TransactionResponse;
    GetBlock(GetBlockRequest):BlockResponse;
    GetTransaction(GetTransactionRequest):TransactionResponse;
    GetLastBlock(EmptyRequest):BlockResponse;
    GetBalance(GetBalanceRequest):BalanceResponse;
    GetStats(GetStatsRequest):StatsResponse;
    GetPendingTransactions(GetPendingTransactionsRequest):PendingTransactionsResponse;
}


// to generate the file again run:
// flatc --go --grpc thrylos.fbs

